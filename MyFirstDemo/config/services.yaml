# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.admin_email: 'dev@gmail.com'
    app.env.type: '%env(APP_ENV)%'
    app.db.type: '%env(DATABASE_URL)%'
    songs_directory: '%kernel.project_dir%/songs'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Service\SiteUpdateManager:
        arguments:
            $adminEmail: 'manager@gmail.com'

    App\Service\MessageGenerator:
        arguments:
            $logger: '@monolog.logger.request'
            $generateMessageHash: !closure '@App\Hash\MessageHashGenerator' 

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    App\EventListener\RequestListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }
            
    App\Event\UserEventSubscriber:
        tags:
            - { name: kernel.event_subscriber, event: user.deleted } 
            - { name: kernel.event_subscriber, event: user.updated }  
            - { name: kernel.event_subscriber, event: user.created }       

            
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
